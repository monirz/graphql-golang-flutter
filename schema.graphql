type User {
    id: ID!
    name: String!
    email: String!
}

type Video {
    id: ID!
    name: String!
    description: String!
    user: User!
    url: String!
    createdAt: Timestamp!
    screenshots: [Screenshot]
    related(limit: Int = 25, offset: Int = 0): [Video!]!
}

type Screenshot {
    id: ID!
    videoId: ID!
    url: String!
}

type Review {
    id: ID!
    videoId: ID!
    user: User!
    description: String!
    rating: Int!
    createdAt: Timestamp!
}

input NewUser {
    id: String!
    name: String!
    email: String!
}

input NewVideo {
    name: String!
    description: String!
    userId: ID!
    url: String!
}

input NewScreenshot {
    videoId: ID!
    url: String!
    description: String
}

input NewReview {
    videoId: ID!
    title: String!
    description: String!
    rating: Int!
    userId: ID!
}

type Mutation {
    createVideo(input: NewVideo!): Video! 
    createUser(input: NewUser!) : User!
}

type Query {
    Videos(limit: Int = 25, offset: Int = 0): [Video!]!
}

type Subscription {
    videoPublished: Video!
    userCreated: User!
}

scalar Timestamp
